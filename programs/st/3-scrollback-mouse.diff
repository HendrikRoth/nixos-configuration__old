diff --git a/config.def.h b/config.def.h
index f1ba2dd..2a74536 100644
--- a/config.def.h
+++ b/config.def.h
@@ -181,6 +181,12 @@ static MouseShortcut mshortcuts[] = {
 	{ XK_ANY_MOD,           Button5, ttysend,        {.s = "\005"} },
 };
 
+MouseKey mkeys[] = {
+	/* button               mask            function        argument */
+	{ Button4,              ShiftMask,      kscrollup,      {.i =  1} },
+	{ Button5,              ShiftMask,      kscrolldown,    {.i =  1} },
+};
+
 /* Internal keyboard shortcuts. */
 #define MODKEY Mod1Mask
 #define TERMMOD (ControlMask|ShiftMask)
diff --git a/st.h b/st.h
index f44e1d3..f92d8ee 100644
--- a/st.h
+++ b/st.h
@@ -77,6 +77,13 @@ typedef union {
 	const char *s;
 } Arg;
 
+typedef struct {
+	 uint b;
+	 uint mask;
+	 void (*func)(const Arg *);
+	 const Arg arg;
+} MouseKey;
+
 void die(const char *, ...);
 void redraw(void);
 void draw(void);
@@ -125,3 +132,4 @@ extern char *termname;
 extern unsigned int tabspaces;
 extern unsigned int defaultfg;
 extern unsigned int defaultbg;
+extern MouseKey mkeys[];
diff --git a/x.c b/x.c
index bcd623d..7fb0b2c 100644
--- a/x.c
+++ b/x.c
@@ -461,6 +461,7 @@ void
 bpress(XEvent *e)
 {
 	struct timespec now;
+    MouseKey *mk;
 	int snap;
 
 	if (IS_SET(MODE_MOUSE) && !(e->xbutton.state & forcemousemod)) {
@@ -471,6 +472,14 @@ bpress(XEvent *e)
 	if (mouseaction(e, 0))
 		return;
 
+	for (mk = mkeys; mk < mkeys + LEN(mkeys); mk++) {
+		if (e->xbutton.button == mk->b
+				&& match(mk->mask, e->xbutton.state)) {
+			mk->func(&mk->arg);
+			return;
+		}
+	}
+
 	if (e->xbutton.button == Button1) {
 		/*
 		 * If the user clicks below predefined timeouts specific
